<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <title>Products</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
</head>
<style>
    /* Reduced table font size and padding */
    table { font-size: 0.75rem; } /* Smaller font size */
    th, td { padding: 4px 6px; white-space: nowrap; } /* Reduced padding */
    td button { padding: 2px 6px; font-size: 0.7rem; } /* Smaller buttons */
    .overflow-x-auto { max-height: 450px; } /* Slightly reduced max height */
    /* Smaller product images */
    .product-image { width: 30px; height: 30px; object-fit: cover; border-radius: 3px; }
    
    /* Compact table for smaller screens */
    @media (max-width: 1024px) {
        th, td { padding: 3px 4px; }
        table { font-size: 0.7rem; }
    }
</style>
<body class="bg-gray-900 text-gray-300">
    <div class="flex h-screen">
        <%- include("../partials/admin/header") %>
        <div class="flex-1 p-4"> <!-- Reduced padding from p-6 to p-4 -->
            <form action="/admin/products" method="get">
                <div class="flex justify-between items-center mb-4"> <!-- Reduced margin from mb-6 to mb-4 -->
                    <input class="bg-gray-800 text-gray-400 p-2 rounded w-1/3" placeholder="Search for Products" type="text" name="search" value="<%= search || '' %>" />
                    <button class="bg-green-500 text-white px-3 py-1 rounded text-sm"> <!-- Smaller button -->
                        <a href="addProducts">ADD PRODUCT +</a>
                    </button>
                </div>
            </form>
            <div class="bg-gray-800 p-3 rounded"> <!-- Reduced padding from p-4 to p-3 -->
                <h2 class="text-lg font-bold mb-3">Products</h2> <!-- Smaller heading and margin -->
                <div class="overflow-x-auto">
                    <table class="w-full text-left">
                        <thead>
                            <tr class="text-gray-400">
                                <th class="py-1">IMAGE</th> <!-- Reduced vertical padding -->
                                <th class="py-1">PRODUCT NAME</th>
                                <th class="py-1">CATEGORY</th> <!-- Shortened label -->
                                <th class="py-1">PRICE</th> <!-- Shortened label -->
                                <th class="py-1">OFFER PRICE</th>
                                <th class="py-1">OFFER</th>
                                <th class="py-1">QTY</th> <!-- Shortened label -->
                                <th class="py-1">ACTIONS</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (data && data.length > 0) { %>
                                <% data.forEach(function(item) { %>
                                    <tr class="border-b border-gray-700" data-product-id="<%= item._id %>">
                                        <td class="py-1">
                                            <% if (item.productImage && item.productImage.length > 0) { %>
                                                <img src="/uploads/product-images/<%= item.productImage[0] %>" alt="<%= item.productName %>" class="product-image">
                                            <% } else { %>
                                                <div class="bg-gray-700 product-image flex items-center justify-center">
                                                    <i class="fas fa-image text-gray-500 text-xs"></i>
                                                </div>
                                            <% } %>
                                        </td>
                                        <td class="py-1"><%= item.productName %></td>
                                        <td class="py-1"><%= item.category ? item.category.name : 'Unknown' %></td>
                                        <td class="py-1"><%= item.regularPrice %></td>
                                        <td class="py-1"><%= item.salePrice %></td>
                                        <td class="py-1">
                                            <% if (item.productOffer && item.productOffer > 0) { %>
                                                <button type="button" class="offer-button bg-red-500 text-white px-1 py-0.5 rounded text-xs" data-product-id="<%= item._id %>" data-has-offer="true" onclick="removeOffer('<%= item._id %>')">Remove</button>
                                            <% } else { %>
                                                <button type="button" class="offer-button bg-blue-500 text-white px-1 py-0.5 rounded text-xs" data-product-id="<%= item._id %>" data-has-offer="false" onclick="addOffer('<%= item._id %>')">Add</button>
                                            <% } %>
                                        </td>
                                        <td class="py-1"><%= item.quantity %></td>
                                        <td class="py-1 flex space-x-1">
                                            <button class="<%= item.status === 'Blocked' ? 'bg-green-500' : 'bg-red-500' %> text-white px-1 py-0.5 rounded text-xs" onclick="toggleBlock(this, '<%= item._id %>', '<%= item.status %>')" data-status="<%= item.status %>">
                                                <%= item.status === 'Blocked' ? 'Unblock' : 'Block' %>
                                            </button>
                                            <a href="/admin/editProduct/<%= item._id %>"><i class="fas fa-edit text-gray-400 hover:text-white cursor-pointer text-xs"></i></a>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr><td colspan="8" class="py-2 text-center text-xs">No products found</td></tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <div class="flex justify-between items-center mt-3 text-xs"> <!-- Reduced margin -->
                    <span class="text-gray-400">SHOWING <%= currentPage %> OF <%= totalPages %></span>
                    <div class="flex space-x-1">
                        <% if(totalPages > 0) { %>
                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <% if(i === currentPage) { %>
                                    <a href="/admin/products?page=<%= i %>&search=<%= search || '' %>" class="px-1.5 py-0.5 bg-purple-500 text-white rounded-full text-xs"><%= i %></a> <!-- Smaller pagination buttons -->
                                <% } else if(i === 1 || i === totalPages || (i >= currentPage - 1 && i <= currentPage + 1)) { %>
                                    <a href="/admin/products?page=<%= i %>&search=<%= search || '' %>" class="px-1.5 py-0.5 bg-gray-700 text-gray-400 rounded-full text-xs"><%= i %></a>
                                <% } else if(i === 2 || i === totalPages - 1) { %>
                                    <span class="px-1.5 py-0.5 bg-gray-700 text-gray-400 rounded-full text-xs">...</span>
                                <% } %>
                            <% } %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

    function toggleBlock(button) {
        if (button.innerText === "Block") {
            button.innerText = "Unblock";
            button.classList.remove("bg-red-500");
            button.classList.add("bg-green-500");
        } else {
            button.innerText = "Block";
            button.classList.remove("bg-green-500");
            button.classList.add("bg-red-500");
        }
    }

    function toggleOffer(button) {
        const productId = button.getAttribute('data-product-id');
        const hasOffer = button.getAttribute('data-has-offer') === 'true';

        console.log('Product ID:', productId, 'Has Offer:', hasOffer);

        if (!hasOffer) {
            addOffer(productId);
        } else {
            
            removeOffer(productId);
        }
    }

    function addOffer(productId) {
        Swal.fire({
            title: 'Offer in percentage',
            input: 'number',
            inputLabel: 'Percentage',
            inputPlaceholder: '%',
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value || value <= 0 || value > 100) {
                    return 'Please enter a valid percentage (1-100)';
                }
            }
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    url: '/admin/addProductOffer',
                    method: 'POST',
                    data: {
                        percentage: result.value,
                        productId: productId
                    },
                    success: (response) => {
                        if (response.status === true) {
                            Swal.fire('Success', 'The offer has been added successfully.', 'success')
                                .then(() => {
                                   
                                    window.location.reload(true);
                                });
                        } else {
                            Swal.fire('Failed', response.message || 'Failed to add offer.', 'error');
                        }
                    },
                    error: (xhr, status, error) => {
                        console.error('AJAX error:', xhr.responseText, status, error);
                        Swal.fire('Error', 'An error occurred. Please try again.', 'error');
                    }
                });
            }
        });
    }
    function removeOffer(productId) {
        Swal.fire({
            title: 'Remove Offer',
            text: 'Are you sure you want to remove this offer?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/admin/removeProductOffer',
                    method: 'POST',
                    data: {
                        productId: productId
                    },
                    success: (response) => {
                        console.log('Remove offer response:', response);
                        if (response.status === true) {
                            Swal.fire('Removed!', 'The offer has been removed', 'success')
                                .then(() => {
                                   
                                    window.location.reload();
                                });
                        } else {
                            Swal.fire('Failed', response.message || 'Failed to remove offer', 'error');
                        }
                    },
                    error: (xhr, status, error) => {
                        console.error('AJAX error:', xhr.responseText, status, error);
                        Swal.fire('Error', 'An error occurred. Please try again.', 'error');
                    }
                });
            }
        });
    }
    
    function toggleBlock(button, productId) {
    const currentStatus = button.getAttribute('data-status');
    const newStatus = currentStatus === 'Blocked' ? 'Available' : 'Blocked';
    const actionText = newStatus === 'Blocked' ? 'block' : 'unblock';

    Swal.fire({
        title: `Confirm ${actionText}`,
        text: `Are you sure you want to ${actionText} this product?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${actionText} it!`
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '/admin/toggleProductStatus',
                method: 'POST',
                data: {
                    productId: productId,
                    status: newStatus
                },
                success: (response) => {
                    if (response.status === true) {
                        button.innerText = newStatus === 'Blocked' ? 'Unblock' : 'Block';
                        button.setAttribute('data-status', newStatus);
                        if (newStatus === 'Blocked') {
                            button.classList.remove("bg-red-500");
                            button.classList.add("bg-green-500");
                        } else {
                            button.classList.remove("bg-green-500");
                            button.classList.add("bg-red-500");
                        }
                        Swal.fire('Success', `Product ${actionText}ed successfully`, 'success');
                    } else {
                        Swal.fire('Failed', response.message || `Failed to ${actionText} product`, 'error');
                    }
                },
                error: (xhr, status, error) => {
                    console.error('AJAX error:', xhr.responseText, status, error);
                    Swal.fire('Error', 'An error occurred. Please try again.', 'error');
                }
            });
        }
    });
}

function updateProductStock() {
  fetch('/admin/products/data', { method: 'GET' })
    .then(response => response.json())
    .then(data => {
      data.forEach(product => {
        const qtyCell = document.querySelector(`tr[data-product-id="${product._id}"] td:nth-child(7)`);
        if (qtyCell && qtyCell.textContent !== product.quantity.toString()) {
          qtyCell.textContent = product.quantity;
        }
      });
    })
    .catch(error => console.error('Error updating stock:', error));
}

setInterval(updateProductStock, 5000); // Update every 5 seconds
</script>