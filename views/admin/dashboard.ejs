<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 20px;
        }
        .chart-loader {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(17, 24, 39, 0.7);
            z-index: 10;
            transition: opacity 0.3s;
        }
        .chart-loader.hidden {
            display: none;
        }
        .stats-card, .grid-card {
            transition: all 0.3s ease;
        }
        .stats-card:hover, .grid-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3);
        }
        /* Accessibility improvements */
        [role="button"] {
            cursor: pointer;
        }
        select, button {
            outline: none;
        }
        select:focus, button:focus {
            ring: 2px solid #8b5cf6;
        }
    </style>
</head>
<body class="bg-gray-900 text-gray-300">
    <div class="flex h-screen">
        <%- include('../partials/admin/header'); %>
        
        <div class="flex-1 p-6 overflow-y-auto">
            <div class="flex justify-between items-center mb-6">
                <h1 class="text-3xl font-bold text-white">Admin Dashboard</h1>
                <div class="flex space-x-3">
                    <select 
                        class="bg-gray-800 text-gray-300 rounded-lg px-3 py-2 text-sm border border-gray-700 focus:ring-2 focus:ring-purple-500" 
                        id="globalTimeFilter"
                        aria-label="Time filter selection"
                    >
                        <option value="daily">Daily</option>
                        <option value="weekly">Weekly</option>
                        <option value="monthly" selected>Monthly</option>
                        <option value="yearly">Yearly</option>
                    </select>
                    <a 
                        href="/admin/reports/sales" 
                        class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg flex items-center transition-colors"
                        aria-label="View sales reports"
                    >
                        <i class="fas fa-chart-line mr-2"></i>
                        Sales Reports
                    </a>
                </div>
            </div>
            
            <!-- Stats Overview -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6" id="statsOverviewContainer">
                <!-- Total Revenue -->
                <div class="bg-gradient-to-br from-purple-900 to-purple-800 rounded-xl p-5 shadow-lg stats-card">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-purple-200 text-sm font-medium mb-1">Total Revenue</p>
                            <h3 class="text-2xl font-bold text-white revenue-value">₹<%= totalRevenue.toLocaleString() %></h3>
                            <p class="text-purple-200 text-xs mt-1 revenue-change">
                                <%= revenueChange >= 0 ? '+' : '' %><%= revenueChange %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="bg-purple-700 rounded-lg p-2 text-white">
                            <i class="fas fa-rupee-sign text-xl"></i>
                        </div>
                    </div>
                </div>
                <!-- Other stats cards remain the same -->
                <!-- Total Orders -->
                <div class="bg-gradient-to-br from-blue-900 to-blue-800 rounded-xl p-5 shadow-lg stats-card">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-blue-200 text-sm font-medium mb-1">Total Orders</p>
                            <h3 class="text-2xl font-bold text-white orders-value"><%= totalOrders %></h3>
                            <p class="text-blue-200 text-xs mt-1 orders-change">
                                <%= ordersChange >= 0 ? '+' : '' %><%= ordersChange %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="bg-blue-700 rounded-lg p-2 text-white">
                            <i class="fas fa-shopping-cart text-xl"></i>
                        </div>
                    </div>
                </div>
                <!-- Total Products -->
                <div class="bg-gradient-to-br from-indigo-900 to-indigo-800 rounded-xl p-5 shadow-lg stats-card">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-indigo-200 text-sm font-medium mb-1">Total Products</p>
                            <h3 class="text-2xl font-bold text-white products-value"><%= totalProducts %></h3>
                            <p class="text-indigo-200 text-xs mt-1 products-change">
                                <%= productsChange >= 0 ? '+' : '' %><%= productsChange %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="bg-indigo-700 rounded-lg p-2 text-white">
                            <i class="fas fa-box text-xl"></i>
                        </div>
                    </div>
                </div>
                <!-- Total Customers -->
                <div class="bg-gradient-to-br from-pink-900 to-pink-800 rounded-xl p-5 shadow-lg stats-card">
                    <div class="flex justify-between items-start">
                        <div>
                            <p class="text-pink-200 text-sm font-medium mb-1">Total Customers</p>
                            <h3 class="text-2xl font-bold text-white customers-value"><%= totalCustomers %></h3>
                            <p class="text-pink-200 text-xs mt-1 customers-change">
                                <%= customersChange >= 0 ? '+' : '' %><%= customersChange %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="bg-pink-700 rounded-lg p-2 text-white">
                            <i class="fas fa-users text-xl"></i>
                        </div>
                    </div>
                </div>
            </div>

<!-- Top Category Highlight -->
<div class="mb-6">
    <div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-bold text-white">Top Performing Category</h3>
            <a 
            href="/admin/category" 
            class="text-purple-400 hover:text-purple-300 text-sm"
            aria-label="Manage products"
        >
            Manage <i class="fas fa-cog ml-1"></i>
        </a>
        </div>
        <div id="topCategoryContainer" class="bg-gray-700 rounded-lg p-4">
            <% if (topCategory && topCategory.name && topCategory.revenue !== undefined) { %>
                <h4 class="font-medium text-lg text-white mb-2"><%= topCategory.name %></h4>
                <div class="flex justify-between items-center">
                    <span class="text-2xl font-bold text-white">₹<%= topCategory.revenue.toLocaleString() %></span>
                    <span class="<%= topCategory.growthRate >= 0 ? 'text-green-400' : 'text-red-400' %> text-sm">
                        <i class="fas <%= topCategory.growthRate >= 0 ? 'fa-arrow-up' : 'fa-arrow-down' %> mr-1"></i>
                        <%= Math.abs(topCategory.growthRate) %>%
                    </span>
                </div>
                <p class="text-gray-300 text-sm mt-2">Units Sold: <%= topCategory.unitsSold %></p>
            <% } else { %>
                <p class="text-gray-400">No category data available</p>
            <% } %>
        </div>
    </div>
</div>

            <!-- Main Content Grid -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
                <!-- Sales Chart -->
                <div class="bg-gray-800 rounded-xl p-5 shadow-lg lg:col-span-2 grid-card">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-bold text-white">Sales Overview</h3>
                        <div class="flex space-x-2">
                            <select 
                                class="bg-gray-800 text-gray-300 rounded-lg px-3 py-2 text-sm border border-gray-700 focus:ring-2 focus:ring-purple-500" 
                                id="chartType"
                                aria-label="Chart type selection"
                            >
                                <option value="line">Line Chart</option>
                                <option value="bar">Bar Chart</option>
                            </select>
                        </div>
                    </div>
                    <div class="chart-container">
                        <canvas id="salesChart"></canvas>
                        <div class="chart-loader" id="chartLoading">
                            <span class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-t-purple-500 border-gray-700"></span>
                        </div>
                    </div>
                </div>
                
                <!-- Recent Orders -->
                <div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-bold text-white">Recent Orders</h3>
                        <a 
                            href="/admin/orders" 
                            class="text-purple-400 hover:text-purple-300 text-sm"
                            aria-label="View all orders"
                        >
                            View All <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                    <div class="space-y-3">
                        <% recentOrders.slice(0, 5).forEach(order => { %>
                            <div class="bg-gray-700 rounded-lg p-3 flex justify-between items-center">
                                <div>
                                    <p class="font-medium text-white">#<%= order.orderID.slice(0, 8) %></p>
                                    <p class="text-sm text-gray-400"><%= order.user.name %></p>
                                </div>
                                <div class="text-right">
                                    <p class="font-medium text-white">₹<%= order.finalAmount.toLocaleString() %></p>
                                    <span class="inline-block px-2 py-1 <%= order.status === 'Delivered' ? 'bg-green-800 text-green-300' : 'bg-yellow-800 text-yellow-300' %> text-xs rounded-full"><%= order.status %></span>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
            
            <!-- Products & Categories -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
<!-- views/admin/dashboard.ejs -->
<!-- Best Selling Products -->
<div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
    <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-bold text-white">Best Selling Products</h3>
        <a 
            href="/admin/products" 
            class="text-purple-400 hover:text-purple-300 text-sm"
            aria-label="Manage products"
        >
            Manage <i class="fas fa-cog ml-1"></i>
        </a>
    </div>
    <div class="overflow-y-auto max-h-96"> <!-- Changed to overflow-y-auto -->
        <% if (topProducts && topProducts.length > 0) { %>
            <table class="w-full text-left">
                <thead>
                    <tr class="text-gray-400 border-b border-gray-700">
                        <th class="py-2 px-3">Product</th>
                        <th class="py-2 px-3">Units</th>
                        <th class="py-2 px-3">Revenue</th>
                        <th class="py-2 px-3">Status</th>
                    </tr>
                </thead>
                <tbody>
                    <% topProducts.forEach(product => { %>
                        <tr class="border-b border-gray-700">
                            <td class="py-1 px-2 flex items-center"> <!-- Reduced padding -->
                                <div class="w-6 h-6 bg-gray-700 rounded-md mr-1 flex items-center justify-center"> <!-- Reduced size -->
                                    <img 
                                        src="<%= product.productImage && product.productImage[0] ? '/uploads/' + product.productImage[0] : '/images/placeholder.png' %>" 
                                        alt="<%= product.productName %>" 
                                        class="w-full h-full object-cover rounded-md"
                                        onerror="this.src='/images/placeholder.png'"
                                    >
                                </div>
                                <span class="truncate max-w-xs text-sm"><%= product.productName %></span> <!-- Reduced font size -->
                            </td>
                            <td class="py-1 px-2 text-sm"><%= product.unitsSold %></td>
                            <td class="py-1 px-2 text-sm">₹<%= product.revenue.toLocaleString() %></td>
                            <td class="py-1 px-2 text-sm">
                                <% if (product.quantity > product.lowStockThreshold) { %>
                                    <span class="inline-block w-2 h-2 bg-green-500 rounded-full mr-1"></span> In Stock
                                <% } else if (product.quantity > 0) { %>
                                    <span class="inline-block w-2 h-2 bg-yellow-500 rounded-full mr-1"></span> Low Stock
                                <% } else { %>
                                    <span class="inline-block w-2 h-2 bg-red-500 rounded-full mr-1"></span> Out of Stock
                                <% } %>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        <% } else { %>
            <p class="text-gray-400 text-center py-4">No best-selling products available</p>
        <% } %>
    </div>
</div>
                
                <!-- Category Performance -->
                <div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-bold text-white">Category Performance</h3>
                        <button 
                            id="refreshCategories" 
                            class="text-purple-400 hover:text-purple-300 text-sm flex items-center"
                            aria-label="Refresh category performance"
                        >
                            Refresh <i class="fas fa-sync ml-1"></i>
                        </button>
                    </div>
                    <div class="chart-container">
                        <canvas id="categoriesChart"></canvas>
                        <div class="chart-loader hidden" id="categoryChartLoading">
                            <span class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-t-purple-500 border-gray-700"></span>
                        </div>
                    </div>
                    <div class="mt-4 grid grid-cols-2 gap-3" id="categoryGridContainer">
                        <% topCategories.slice(0, 4).forEach(category => { %>
                            <div class="bg-gray-700 rounded-lg p-3">
                                <h4 class="font-medium text-sm text-white mb-1 truncate"><%= category.name %></h4>
                                <div class="flex justify-between items-center">
                                    <span class="text-lg font-bold text-white">₹<%= category.revenue.toLocaleString() %></span>
                                    <span class="<%= category.growthRate >= 0 ? 'text-green-400' : 'text-red-400' %> text-sm">
                                        <i class="fas <%= category.growthRate >= 0 ? 'fa-arrow-up' : 'fa-arrow-down' %> mr-1"></i>
                                        <%= Math.abs(category.growthRate) %>%
                                    </span>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
            
            <!-- Inventory & Customer Insights -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
<!-- views/admin/dashboard.ejs -->
<!-- Inventory Status -->
<div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
    <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-bold text-white">Inventory Status</h3>
        <button 
            id="refreshInventory" 
            class="text-purple-400 hover:text-purple-300 text-sm"
            aria-label="Refresh inventory status"
        >
            Refresh <i class="fas fa-sync ml-1"></i>
        </button>
    </div>
    <div class="grid grid-cols-2 gap-3 mb-4">
        <div class="bg-gray-700 rounded-lg p-3">
            <p class="text-gray-400 text-sm">Low Stock Items</p>
            <div class="flex justify-between items-center mt-1">
                <p class="text-xl font-bold text-white low-stock-count"><%= inventoryStatus.lowStockItems %></p>
                <span class="text-yellow-500"><i class="fas fa-exclamation-triangle"></i></span>
            </div>
        </div>
        <div class="bg-gray-700 rounded-lg p-3">
            <p class="text-gray-400 text-sm">Out of Stock</p>
            <div class="flex justify-between items-center mt-1">
                <p class="text-xl font-bold text-white out-of-stock-count"><%= inventoryStatus.outOfStockItems %></p>
                <span class="text-red-500"><i class="fas fa-times-circle"></i></span>
            </div>
        </div>
    </div>
    <div class="relative pt-1">
        <div class="flex mb-2 items-center justify-between">
            <div>
                <span class="text-xs font-semibold inline-block text-purple-400">
                    Stock Distribution
                </span>
            </div>
        </div>
        <div class="overflow-hidden h-2 mb-1 text-xs flex rounded bg-gray-700 stock-distribution-bar">
            <div style="width:<%= inventoryStatus.distribution.highStock.percentage %>%" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500"></div>
            <div style="width:<%= inventoryStatus.distribution.lowStock.percentage %>%" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-yellow-500"></div>
            <div style="width:<%= inventoryStatus.distribution.outOfStock.percentage %>%" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-red-500"></div>
        </div>
        <div class="flex justify-between text-xs text-gray-400 mt-1">
            <span class="high-stock-label">High Stock (<%= inventoryStatus.distribution.highStock.percentage %>%)</span>
            <span class="low-stock-label">Low (<%= inventoryStatus.distribution.lowStock.percentage %>%)</span>
            <span class="out-stock-label">Out (<%= inventoryStatus.distribution.outOfStock.percentage %>%)</span>
        </div>
    </div>
</div>
                
                <!-- Customer Insights -->
                <div class="bg-gray-800 rounded-xl p-5 shadow-lg grid-card">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-bold text-white">Customer Insights</h3>
                        <a 
                            href="/admin/users" 
                            class="text-purple-400 hover:text-purple-300 text-sm"
                            aria-label="View all customers"
                        >
                            View All <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                    <div class="flex mb-4" id="customerInsightsContainer">
                        <div class="w-1/3 text-center p-2">
                            <h4 class="text-sm text-gray-400">New Customers</h4>
                            <p class="text-xl font-bold text-white new-customers-count">+<%= customerInsights.newCustomers.count %></p>
                            <p class="text-xs new-customers-change <%= customerInsights.newCustomers.changePercent >= 0 ? 'text-green-400' : 'text-red-400' %>">
                                <i class="fas fa-<%= customerInsights.newCustomers.changePercent >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                                <%= Math.abs(customerInsights.newCustomers.changePercent) %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="w-1/3 text-center p-2 border-l border-r border-gray-700">
                            <h4 class="text-sm text-gray-400">Returning</h4>
                            <p class="text-xl font-bold text-white returning-rate"><%= customerInsights.returningRate.percentage %>%</p>
                            <p class="text-xs returning-rate-change <%= customerInsights.returningRate.changePercent >= 0 ? 'text-green-400' : 'text-red-400' %>">
                                <i class="fas fa-<%= customerInsights.returningRate.changePercent >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                                <%= Math.abs(customerInsights.returningRate.changePercent) %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                        <div class="w-1/3 text-center p-2">
                            <h4 class="text-sm text-gray-400">Avg Order</h4>
                            <p class="text-xl font-bold text-white avg-order-value">₹<%= customerInsights.avgOrderValue.amount.toLocaleString() %></p>
                            <p class="text-xs avg-order-change <%= customerInsights.avgOrderValue.changePercent >= 0 ? 'text-green-400' : 'text-red-400' %>">
                                <i class="fas fa-<%= customerInsights.avgOrderValue.changePercent >= 0 ? 'arrow-up' : 'arrow-down' %> mr-1"></i>
                                <%= Math.abs(customerInsights.avgOrderValue.changePercent) %>% from last <%= globalTimeFilter %>
                            </p>
                        </div>
                    </div>
                    <div>
                        <h4 class="text-sm font-medium text-white mb-2">Recent Sign-ups</h4>
                        <div class="space-y-2">
                            <% recentSignups.forEach(user => { %>
                                <div class="flex items-center p-2 bg-gray-700 rounded-lg">
                                    <div class="w-8 h-8 rounded-full bg-purple-600 flex items-center justify-center mr-3">
                                        <span class="text-white"><%= user.firstLetter %></span>
                                    </div>
                                    <div>
                                        <p class="font-medium text-white"><%= user.name %></p>
                                        <p class="text-xs text-gray-400"><%= user.timeAgo %></p>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    
    <script>
// Chart data from server
const salesData = <%- JSON.stringify(salesData) %> || { labels: [], values: [] };
const productsData = <%- JSON.stringify(topProducts) %> || [];
const categoriesData = <%- JSON.stringify(topCategories) %> || [];
const topCategoryData = <%- JSON.stringify(topCategory) %> || null;

// Chart.js default configuration - Dark theme
Chart.defaults.color = '#9ca3af';
Chart.defaults.borderColor = '#374151';

// Initialize charts and event listeners
$(document).ready(function() {
    try {
        initSalesChart();
        initCategoriesChart();
        renderTopCategory(topCategoryData);
        
        // Handle global time filter changes
        $('#globalTimeFilter').on('change', function() {
            $('#chartLoading').removeClass('hidden');
            $('#categoryChartLoading').removeClass('hidden');
            updateAllSections();
        });
        
        // Handle refresh button for categories
        $('#refreshCategories').on('click', function() {
            const $button = $(this);
            const originalHtml = $button.html();
            
            $button.html('<i class="fas fa-spinner fa-spin mr-1"></i> Refreshing...');
            $button.prop('disabled', true);
            
            updateCategoryData(() => {
                $button.html(originalHtml);
                $button.prop('disabled', false);
            });
        });

        // Handle refresh button for inventory
        $('#refreshInventory').on('click', function() {
            const $button = $(this);
            const originalHtml = $button.html();
            
            $button.html('<i class="fas fa-spinner fa-spin mr-1"></i> Refreshing...');
            $button.prop('disabled', true);
            
            $.ajax({
                url: '/admin/api/inventory-status',
                type: 'GET',
                success: function(data) {
                    $('.low-stock-count').text(data.lowStockItems);
                    $('.out-of-stock-count').text(data.outOfStockItems);
                    updateStockDistributionBar(data.distribution);
                    $button.html(originalHtml);
                    $button.prop('disabled', false);
                    showNotification('Inventory data refreshed', 'success');
                },
                error: function(err) {
                    console.error('Error refreshing inventory data:', err);
                    $button.html(originalHtml);
                    $button.prop('disabled', false);
                    showNotification('Failed to refresh inventory data', 'error');
                }
            });
        });
        
        // Handle chart type change for sales chart
        $('#chartType').on('change', function() {
            $('#chartLoading').removeClass('hidden');
            updateSalesChart();
        });
        
        $('#chartLoading').addClass('hidden');
        $('#categoryChartLoading').addClass('hidden');
    } catch (error) {
        console.error('Initialization error:', error);
        showNotification('Error initializing dashboard', 'error');
    }
});

function updateAllSections() {
    const timeFilter = $('#globalTimeFilter').val();
    
    // Define update tasks as promise-returning functions
    const updateTasks = [
        () => new Promise((resolve, reject) => {
            $.ajax({
                url: '/admin/api/sales-data',
                type: 'GET',
                data: {
                    timeFilter: timeFilter,
                    year: new Date().getFullYear(),
                    month: new Date().getMonth()
                },
                success: function(data) {
                    salesChart.config.type = $('#chartType').val();
                    salesChart.data.labels = data.labels || [];
                    salesChart.data.datasets[0].data = data.values || [];
                    salesChart.update();
                    resolve();
                },
                error: function(err) {
                    console.error('Error fetching sales data:', err);
                    reject(err);
                }
            });
        }),
        () => new Promise((resolve, reject) => {
            $.ajax({
                url: '/admin/api/category-data',
                type: 'GET',
                data: { timeFilter: timeFilter },
                success: function(data) {
                    categoriesChart.data.labels = data.categories.map(c => c.name);
                    categoriesChart.data.datasets[0].data = data.categories.map(c => c.revenue);
                    categoriesChart.update();
                    updateCategoryGrid(data.categories.slice(0, 4));
                    renderTopCategory(data.topCategory);
                    resolve();
                },
                error: function(err) {
                    console.error('Error fetching category data:', err);
                    reject(err);
                }
            });
        }),
        () => new Promise((resolve, reject) => {
            $.ajax({
                url: '/admin/api/stats-overview',
                type: 'GET',
                data: { timeFilter: timeFilter },
                success: function(data) {
                    $('.revenue-value').text(`₹${data.totalRevenue.toLocaleString()}`);
                    $('.revenue-change').text(`${data.revenueChange >= 0 ? '+' : ''}${data.revenueChange}% from last ${timeFilter}`);
                    $('.orders-value').text(data.totalOrders);
                    $('.orders-change').text(`${data.ordersChange >= 0 ? '+' : ''}${data.ordersChange}% from last ${timeFilter}`);
                    $('.products-value').text(data.totalProducts);
                    $('.products-change').text(`${data.productsChange >= 0 ? '+' : ''}${data.productsChange}% from last ${timeFilter}`);
                    $('.customers-value').text(data.totalCustomers);
                    $('.customers-change').text(`${data.customersChange >= 0 ? '+' : ''}${data.customersChange}% from last ${timeFilter}`);
                    resolve();
                },
                error: function(err) {
                    console.error('Error fetching stats overview:', err);
                    reject(err);
                }
            });
        }),
        () => new Promise((resolve, reject) => {
            $.ajax({
                url: '/admin/api/customer-insights',
                type: 'GET',
                data: { timeFilter: timeFilter },
                success: function(data) {
                    $('.new-customers-count').text(`+${data.newCustomers.count}`);
                    $('.new-customers-change').html(`
                        <i class="fas fa-${data.newCustomers.changePercent >= 0 ? 'arrow-up' : 'arrow-down'} mr-1"></i>
                        ${Math.abs(data.newCustomers.changePercent)}% from last ${timeFilter}
                    `).removeClass('text-green-400 text-red-400')
                      .addClass(data.newCustomers.changePercent >= 0 ? 'text-green-400' : 'text-red-400');
                    
                    $('.returning-rate').text(`${data.returningRate.percentage}%`);
                    $('.returning-rate-change').html(`
                        <i class="fas fa-${data.returningRate.changePercent >= 0 ? 'arrow-up' : 'arrow-down'} mr-1"></i>
                        ${Math.abs(data.returningRate.changePercent)}% from last ${timeFilter}
                    `).removeClass('text-green-400 text-red-400')
                      .addClass(data.returningRate.changePercent >= 0 ? 'text-green-400' : 'text-red-400');
                    
                    $('.avg-order-value').text(`₹${data.avgOrderValue.amount.toLocaleString()}`);
                    $('.avg-order-change').html(`
                        <i class="fas fa-${data.avgOrderValue.changePercent >= 0 ? 'arrow-up' : 'arrow-down'} mr-1"></i>
                        ${Math.abs(data.avgOrderValue.changePercent)}% from last ${timeFilter}
                    `).removeClass('text-green-400 text-red-400')
                      .addClass(data.avgOrderValue.changePercent >= 0 ? 'text-green-400' : 'text-red-400');
                    
                    resolve();
                },
                error: function(err) {
                    console.error('Error fetching customer insights:', err);
                    reject(err);
                }
            });
        })
    ];

    // Run all updates and show a single notification
    Promise.all(updateTasks.map(task => task()))
        .then(() => {
            $('#chartLoading').addClass('hidden');
            $('#categoryChartLoading').addClass('hidden');
            showNotification('All dashboard sections updated', 'success');
        })
        .catch((err) => {
            console.error('Error updating dashboard sections:', err);
            $('#chartLoading').addClass('hidden');
            $('#categoryChartLoading').addClass('hidden');
            showNotification('Failed to update some dashboard sections', 'error');
        });
}

// Sales Chart
let salesChart;

function initSalesChart() {
    try {
        const ctx = document.getElementById('salesChart').getContext('2d');
        salesChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: salesData.labels || [],
                datasets: [{
                    label: 'Sales',
                    data: salesData.values || [],
                    backgroundColor: 'rgba(139, 92, 246, 0.2)',
                    borderColor: 'rgba(139, 92, 246, 1)',
                    borderWidth: 2,
                    tension: 0.4,
                    pointBackgroundColor: 'rgba(139, 92, 246, 1)',
                    pointBorderColor: '#fff',
                    pointRadius: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: { display: false },
                    tooltip: {
                        backgroundColor: 'rgba(17, 24, 39, 0.9)',
                        padding: 12,
                        titleColor: '#fff',
                        bodyColor: '#e5e7eb',
                        borderColor: '#4b5563',
                        borderWidth: 1,
                        displayColors: false,
                        callbacks: {
                            label: function(context) {
                                return '₹ ' + context.parsed.y.toLocaleString();
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: { color: 'rgba(75, 85, 99, 0.2)' },
                        ticks: {
                            callback: function(value) {
                                return '₹' + value.toLocaleString();
                            }
                        }
                    },
                    x: {
                        grid: { display: false }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Error initializing sales chart:', error);
        showNotification('Error initializing sales chart', 'error');
    }
}

function updateSalesChart() {
    const timeFilter = $('#globalTimeFilter').val();
    const chartType = $('#chartType').val();
    
    $.ajax({
        url: '/admin/api/sales-data',
        type: 'GET',
        data: {
            timeFilter: timeFilter,
            year: new Date().getFullYear(),
            month: new Date().getMonth()
        },
        success: function(data) {
            salesChart.config.type = chartType;
            salesChart.data.labels = data.labels || [];
            salesChart.data.datasets[0].data = data.values || [];
            salesChart.update();
            $('#chartLoading').addClass('hidden');
            showNotification('Sales data updated', 'success');
        },
        error: function(err) {
            console.error('Error fetching sales data:', err);
            $('#chartLoading').addClass('hidden');
            showNotification('Failed to update sales data', 'error');
        }
    });
}

// Categories Chart
let categoriesChart;

function initCategoriesChart() {
    try {
        const ctx = document.getElementById('categoriesChart').getContext('2d');
        const categoryNames = categoriesData.map(c => c.name);
        const categoryRevenues = categoriesData.map(c => c.revenue);
        
        categoriesChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: categoryNames,
                datasets: [{
                    data: categoryRevenues,
                    backgroundColor: [
                        'rgba(139, 92, 246, 0.8)',
                        'rgba(79, 70, 229, 0.8)',
                        'rgba(59, 130, 246, 0.8)',
                        'rgba(236, 72, 153, 0.8)',
                        'rgba(248, 113, 113, 0.8)',
                        'rgba(16, 185, 129, 0.8)',
                        'rgba(245, 158, 11, 0.8)'
                    ],
                    borderColor: '#1f2937',
                    borderWidth: 2,
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right',
                        labels: {
                            boxWidth: 12,
                            padding: 15,
                            font: { size: 11 }
                        }
                    },
                    tooltip: {
                        backgroundColor: 'rgba(17, 24, 39, 0.9)',
                        padding: 12,
                        titleColor: '#fff',
                        bodyColor: '#e5e7eb',
                        borderColor: '#4b5563',
                        borderWidth: 1,
                        callbacks: {
                            label: function(context) {
                                const value = context.parsed;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${context.label}: ₹${value.toLocaleString()} (${percentage}%)`;
                            }
                        }
                    }
                },
                cutout: '65%'
            }
        });
    } catch (error) {
        console.error('Error initializing categories chart:', error);
        showNotification('Error initializing categories chart', 'error');
    }
}

function updateCategoryData(callback) {
    const timeFilter = $('#globalTimeFilter').val();
    $('#categoryChartLoading').removeClass('hidden');
    
    $.ajax({
        url: '/admin/api/category-data',
        type: 'GET',
        data: { timeFilter: timeFilter },
        success: function(data) {
            categoriesChart.data.labels = data.categories.map(c => c.name);
            categoriesChart.data.datasets[0].data = data.categories.map(c => c.revenue);
            categoriesChart.update();
            
            updateCategoryGrid(data.categories.slice(0, 4));
            renderTopCategory(data.topCategory);
            
            $('#categoryChartLoading').addClass('hidden');
            showNotification('Category data updated', 'success');
            
            if (callback) callback();
        },
        error: function(err) {
            console.error('Error fetching category data:', err);
            $('#categoryChartLoading').addClass('hidden');
            showNotification('Failed to update category data', 'error');
            
            if (callback) callback();
        }
    });
}

function renderTopCategory(category) {
    const $container = $('#topCategoryContainer');
    $container.empty();
    
    if (category && category.name && category.revenue !== undefined) {
        const growthClass = category.growthRate >= 0 ? 'text-green-400' : 'text-red-400';
        const growthIcon = category.growthRate >= 0 ? 'fa-arrow-up' : 'fa-arrow-down';
        
        const $card = $(`
            <h4 class="font-medium text-lg text-white mb-2">${category.name}</h4>
            <div class="flex justify-between items-center">
                <span class="text-2xl font-bold text-white">₹${category.revenue.toLocaleString()}</span>
                <span class="${growthClass} text-sm">
                    <i class="fas ${growthIcon} mr-1"></i>${Math.abs(category.growthRate)}%
                </span>
            </div>
            <p class="text-gray-300 text-sm mt-2">Units Sold: ${category.unitsSold}</p>
        `);
        
        $container.append($card);
    } else {
        $container.append('<p class="text-gray-400">No category data available</p>');
    }
}

function updateCategoryGrid(categories) {
    const $container = $('#categoryGridContainer');
    $container.empty();
    
    categories.forEach(category => {
        const growthClass = category.growthRate >= 0 ? 'text-green-400' : 'text-red-400';
        const growthIcon = category.growthRate >= 0 ? 'fa-arrow-up' : 'fa-arrow-down';
        
        const $card = $(`
            <div class="bg-gray-700 rounded-lg p-3">
                <h4 class="font-medium text-sm text-white mb-1 truncate">${category.name}</h4>
                <div class="flex justify-between items-center">
                    <span class="text-lg font-bold text-white">₹${category.revenue.toLocaleString()}</span>
                    <span class="${growthClass} text-sm">
                        <i class="fas ${growthIcon} mr-1"></i>${Math.abs(category.growthRate)}%
                    </span>
                </div>
            </div>
        `);
        
        $container.append($card);
    });
}

function updateStockDistributionBar(distribution) {
    try {
        const $bar = $('.stock-distribution-bar');
        
        $bar.children().eq(0).css('width', distribution.highStock.percentage + '%');
        $bar.children().eq(1).css('width', distribution.lowStock.percentage + '%');
        $bar.children().eq(2).css('width', distribution.outOfStock.percentage + '%');
        
        $('.high-stock-label').text('High Stock (' + distribution.highStock.percentage + '%)');
        $('.low-stock-label').text('Low (' + distribution.lowStock.percentage + '%)');
        $('.out-stock-label').text('Out (' + distribution.outOfStock.percentage + '%)');
    } catch (error) {
        console.error('Error updating stock distribution bar:', error);
        showNotification('Error updating stock distribution', 'error');
    }
}

function showNotification(message, type) {
    const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';
    const $notification = $(`
        <div class="fixed top-4 right-4 ${bgColor} text-white px-4 py-2 rounded shadow-lg z-50 flex items-center">
            <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'} mr-2"></i>
            ${message}
        </div>
    `).appendTo('body');
    
    setTimeout(() => {
        $notification.fadeOut(300, function() {
            $(this).remove();
        });
    }, 3000);
}
    </script>
</body>
</html>