<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <title>Beauty Cart - Payment</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap" rel="stylesheet">
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <style>
    /* Existing styles remain unchanged */
    body { 
      font-family: 'Lato', sans-serif; 
      background-color: #f9fafb; 
    }
    .input-field {
      border: 1px solid #e2e8f0;
      transition: all 0.2s ease;
    }
    .input-field:focus {
      border-color: palevioletred;
      outline: none;
      box-shadow: 0 0 0 2px pink;
    }
    .checkout-step {
      position: relative;
      display: flex;
      align-items: center;
    }
    .checkout-step:not(:last-child)::after {
      content: '';
      position: absolute;
      height: 2px;
      width: 100%;
      background-color: #e5e7eb;
      top: 50%;
      left: 50%;
      z-index: 0;
    }
    .step-circle {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background-color: #fff;
      border: 2px solid #e5e7eb;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1;
    }
    .step-active .step-circle {
      border-color: black;
      background-color: black;
      color: white;
    }
    .step-completed .step-circle {
      border-color: #10b981;
      background-color: #10b981;
      color: white;
    }
    .payment-option {
      transition: all 0.2s ease;
      border: 1px solid #e5e7eb;
    }
    .payment-option:hover {
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    .payment-option.selected {
      border-color: palevioletred;
      box-shadow: 0 0 0 1px pink;
    }
    input[type="radio"]:disabled + label {
      color: #a0aec0; /* Gray text */
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <%- include('../partials/user/header') %>

  <div class="container mx-auto px-4 py-8 max-w-5xl">
    <!-- Checkout Progress -->
    <div class="flex justify-center mb-10">
      <div class="w-full max-w-3xl flex justify-between">
        <div class="checkout-step step-completed flex-1 text-center">
          <div class="flex flex-col items-center">
            <div class="step-circle">
              <i class="fas fa-check text-sm"></i>
            </div>
            <span class="text-sm mt-2 text-gray-700">Cart</span>
          </div>
        </div>
        <div class="checkout-step step-completed flex-1 text-center">
          <div class="flex flex-col items-center">
            <div class="step-circle">
              <i class="fas fa-check text-sm"></i>
            </div>
            <span class="text-sm mt-2 text-gray-700">Address</span>
          </div>
        </div>
        <div class="checkout-step step-active flex-1 text-center">
          <div class="flex flex-col items-center">
            <div class="step-circle">
              3
            </div>
            <span class="text-sm mt-2 text-gray-700">Payment</span>
          </div>
        </div>
        <div class="checkout-step flex-1 text-center">
          <div class="flex flex-col items-center">
            <div class="step-circle">
              4
            </div>
            <span class="text-sm mt-2 text-gray-700">Confirmation</span>
          </div>
        </div>
      </div>
    </div>

    <h1 class="text-3xl font-bold mb-8 text-center text-gray-800">Payment Method</h1>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Payment Options Column -->
      <div class="lg:col-span-2">
        <form id="payment-form" method="POST">
          <input type="hidden" name="selectedAddress" value="<%= selectedAddress %>">
          
          <div class="grid grid-cols-1 gap-4">
            <!-- COD Payment Option -->
            <div class="payment-option bg-white rounded-lg p-5">
              <div class="flex items-center">
                <input type="radio" id="cod" name="paymentMethod" value="cod" class="mr-3" <%= total > 1000 ? 'disabled' : '' %>>
                <label for="cod" class="flex items-center cursor-pointer w-full">
                  <div class="bg-gray-100 p-3 rounded-full mr-3">
                    <i class="fas fa-money-bill-wave text-gray-700"></i>
                  </div>
                  <div>
                    <span class="font-medium text-gray-800 block">Cash on Delivery</span>
                    <span class="text-sm text-gray-500">
                      <%= total > 1000 ? 'Not available for orders above ₹1000' : 'Pay when you receive your order' %>
                    </span>
                  </div>
                </label>
              </div>
            </div>
            
            <!-- Razorpay Option -->
            <div class="payment-option bg-white rounded-lg p-5">
              <div class="flex items-center">
                <input type="radio" id="razorpay" name="paymentMethod" value="razorpay" class="mr-3">
                <label for="razorpay" class="flex items-center cursor-pointer w-full">
                  <div class="bg-gray-100 p-3 rounded-full mr-3">
                    <i class="fas fa-university text-gray-700"></i>
                  </div>
                  <div>
                    <span class="font-medium text-gray-800 block">Razorpay</span>
                    <span class="text-sm text-gray-500">Pay securely with Razorpay</span>
                  </div>
                </label>
              </div>
            </div>
            
            <!-- Wallet Option -->
            <div class="payment-option bg-white rounded-lg p-5">
              <div class="flex items-center">
                <input type="radio" id="wallet" name="paymentMethod" value="wallet" class="mr-3" <%= walletBalance < total ? 'disabled' : '' %>>
                <label for="wallet" class="flex items-center cursor-pointer w-full">
                  <div class="bg-gray-100 p-3 rounded-full mr-3">
                    <i class="fas fa-wallet text-gray-700"></i>
                  </div>
                  <div>
                    <span class="font-medium text-gray-800 block">Wallet</span>
                    <span class="text-sm text-gray-500">
                      <%= walletBalance < total ? `Insufficient balance (₹${walletBalance.toFixed(2)} < ₹${total.toFixed(2)})` : `Pay with wallet (Balance: ₹${walletBalance.toFixed(2)})` %>
                    </span>
                  </div>
                </label>
              </div>
            </div>
          </div>
          
          <div id="payment-error" class="text-red-500 text-sm text-center mt-2 hidden">
            Please select a payment method before proceeding.
          </div>

          <button type="submit" class="w-full bg-black text-white py-3 rounded hover:bg-gray-800 transition mt-6 font-medium">
            Complete Order
          </button>
          
          <div class="mt-4 flex items-center justify-center text-gray-500 text-sm">
            <i class="fas fa-shield-alt mr-2 text-green-500"></i>
            Secure Checkout
          </div>
        </form>
      </div>
      
      <!-- Order Summary -->
      <div class="lg:col-span-1">
        <div class="bg-white rounded-lg shadow p-6 sticky top-6">
          <h2 class="text-lg font-bold mb-4 text-gray-800 pb-2 border-b">
            Order Summary
          </h2>
          <div class="space-y-3 mb-6">
            <% cart.items.forEach((item) => { %>
              <div class="flex justify-between items-center pb-2 text-sm">
                <div>
                  <p class="font-medium"><%= item.product.productName %></p>
                  <p class="text-xs text-gray-600">x <%= item.quantity %></p>
                </div>
                <p class="font-medium">
                  ₹<%= (item.product.regularPrice * (1 - Math.max(item.product.productOffer || 0, item.product.category.categoryOffer || 0) / 100) * item.quantity).toFixed(2) %>
                </p>
              </div>
            <% }); %>
            
            <div class="pt-3 border-t border-gray-100"></div>
            
            <div class="flex justify-between text-sm">
              <span class="text-gray-600">Subtotal</span>
              <span>₹<%= subtotal.toFixed(2) %></span>
            </div>
            <% if (discount > 0) { %>
              <div class="flex justify-between text-sm text-green-600">
                <span>Discount</span>
                <span>-₹<%= discount.toFixed(2) %></span>
              </div>
            <% } %>
            <div class="flex justify-between text-sm">
              <span class="text-gray-600">Shipping</span>
              <span>₹<%= shippingCost.toFixed(2) %></span>
            </div>
            <div class="flex justify-between text-sm">
              <span class="text-gray-600">Tax</span>
              <span>₹<%= tax.toFixed(2) %></span>
            </div>
            <div class="flex justify-between font-bold text-lg pt-4 border-t">
              <span>Total</span>
              <span>₹<%= total.toFixed(2) %></span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/user/footer') %>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const paymentRadios = document.querySelectorAll('input[name="paymentMethod"]');
      const paymentOptions = document.querySelectorAll('.payment-option');
      const form = document.getElementById('payment-form');
      
      paymentRadios.forEach(radio => {
        radio.addEventListener('change', () => {
          paymentOptions.forEach(option => {
            const optionRadio = option.querySelector('input[type="radio"]');
            option.classList.toggle('selected', optionRadio === radio);
          });
        });
      });
      
      paymentOptions.forEach(option => {
        option.addEventListener('click', function() {
          const radio = this.querySelector('input[type="radio"]');
          if (!radio.disabled) {
            radio.checked = true;
            const event = new Event('change');
            radio.dispatchEvent(event);
          }
        });
      });
      
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        const formData = new FormData(form);
        const paymentMethod = formData.get('paymentMethod');
        const paymentError = document.getElementById('payment-error');

        paymentError.classList.add('hidden');

        if (!paymentMethod) {
          paymentError.classList.remove('hidden');
          return;
        }

        const jsonData = Object.fromEntries(formData);

        try {
          const response = await fetch('/place-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(jsonData)
          });
          
          const data = await response.json();
          
          if (!response.ok) {
            window.location.href = `/order-error?message=Payment%20Initiation%20Failed&details=${encodeURIComponent(data.message || 'Something went wrong')}&orderId=${data.orderId || ''}&finalAmount=${data.finalAmount || ''}`;
            return;
          }

          if (paymentMethod === 'razorpay' && data.razorpayOrder) {
            const options = {
              key: data.key_id,
              amount: data.razorpayOrder.amount,
              currency: 'INR',
              name: 'LARIS',
              description: 'Order Payment',
              order_id: data.razorpayOrder.id,
              handler: async function(response) {
                const verifyResponse = await fetch('/verify-payment', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({
                    orderId: data.orderId,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature
                  })
                });
                const verifyData = await verifyResponse.json();
                if (verifyData.success) {
                  window.location.href = `/order-success?orderId=${verifyData.orderId}`;
                } else {
                  window.location.href = `/order-error?message=Payment%20Verification%20Failed&details=Payment%20verification%20failed&orderId=${data.orderId}&finalAmount=${data.finalAmount || ''}`;
                }
              },
              prefill: {
                name: 'Customer Name',
                email: 'customer@example.com',
                contact: '9999999999'
              },
              theme: {
                color: '#F472B6'
              },
              modal: {
                ondismiss: function() {
                  window.location.href = `/order-error?message=Payment%20Cancelled&details=Payment%20was%20not%20completed&orderId=${data.orderId}&finalAmount=${data.finalAmount || ''}`;
                }
              }
            };
            
            const rzp = new Razorpay(options);
            rzp.open();
          } else if (paymentMethod === 'wallet') {
            // Handle wallet payment
            const walletResponse = await fetch('/wallet/process-payment', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                orderId: data.orderId,
                amount: <%= total %>
              })
            });
            const walletData = await walletResponse.json();
            if (walletData.success) {
              window.location.href = `/order-success?orderId=${walletData.orderId}`;
            } else {
              window.location.href = `/order-error?message=Wallet%20Payment%20Failed&details=${encodeURIComponent(walletData.message || 'Insufficient balance')}&orderId=${data.orderId}&finalAmount=${data.finalAmount || ''}`;
            }
          } else {
            window.location.href = `/order-success?orderId=${data.orderId}`;
          }
        } catch (error) {
          console.error('Error:', error);
          window.location.href = `/order-error?message=Payment%20Error&details=An%20error%20occurred%20while%20processing%20your%20order&orderId=&finalAmount=`;
        }
      });
    });
  </script>
</body>
</html>